#pragma kernel GrassPositions

#include "Assets/Resources/Simplex.compute"

struct GrassData {
    float4 position;
    float2 uv;
    float displacement;
};

RWStructuredBuffer<GrassData> _GrassDataBuffer;
Texture2D<float4> _HeightMap;
SamplerState sampler_HeightMap;

int _Scale;

[numthreads(8,8,1)]
void GrassPositions (uint3 id : SV_DispatchThreadID)
{
    GrassData grass;
    float4 pos = 0.0f;
    
    float scale = float(_Scale);
    
    pos.x = id.x;
    pos.z = id.z;
    pos.xz *= 1.0f / scale;

    pos.x += snoise(pos.xz * 3.0f) * 0.05f;
    pos.z += snoise(pos.xz * 0.4f) * 0.05f;

    float uvX = pos.x;
    uvY = pos.z;

    float2 uv = float2(uvX, uvy);
    uv.x = 1 - uv.x;
    uv.y = 1 - uv.y;

    float4 displacement = _HeightMap.SampleLevel(sampler_HeightMap, uv, 0);

    pos.y += displacement.r;

    float noise = abs(snoise(pos.xz * 2.2f));

    pos.w = lerp(0.3f, 0.8f, noise);

    grass.position = pos;
    grass.displacement = displacement.r;
    grass.uv = uv;

    _GrassDataBuffer[id.x + id.y] = grass;
}
